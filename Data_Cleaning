-- Cleaning data using SQL queries

SELECT *
FROM data;

-- Standarize Date Format

select saledate
from data;

alter table data
add SaleDateConverted date;

update data
set SaleDateConverted = cast(SaleDate as date);

alter table data
drop column SaleDate;

-- Breaking address into individual columns (address, city, state)

select PropertyAddress
from data;

select
substring_index(PropertyAddress, ',', 1) as address, 
substring_index(PropertyAddress, ',', -1) as city
from data;

alter table data
add SplitAddress varchar(1000);

alter table data
add SplitCity varchar(1000);

update data
set SplitAddress = substring_index(PropertyAddress, ',', 1);

update data
set SplitCity = substring_index(PropertyAddress, ',', -1);

alter table data
drop column PropertyAddress;

select owneraddress
from data;

alter table data
add SplitOwnerAddress varchar(1000);


alter table data
add SplitOwnerCity varchar(1000);


alter table data
add SplitOwnerState varchar(1000);

update data
set SplitOwnerCity = substring_index(substring_index(OwnerAddress, ',', 2), ',', -1);


update data
set SplitOwnerState = substring_index(OwnerAddress, ',', -1);

update data
set SplitOwnerAddress = substring_index(OwnerAddress, ',', 1);

alter table data
drop column OwnerAddress;

alter table data
change SplitAddress SplitPropertAddress varchar(1000); 

alter table data
change SplitCity SplitPropertyCity varchar(1000);

-- Change Y and N to Yes and No in SoldAsVacant field

select distinct(SoldAsVacant), count(SoldAsVacant)
from data
group by SoldAsVacant
order by count(SoldAsVacant);

select SoldAsVacant
,case 	when SoldAsVacant = 'Y' then 'Yes'
		when SoldAsVacant = 'N' then 'No'
else	SoldAsVacant
end as ChangedSoldAsVacant
from data;

update data
set SoldAsVacant = 
case 	when SoldAsVacant = 'Y' then 'Yes'
		when SoldAsVacant = 'N' then 'No'
else	SoldAsVacant
end;

alter table data
drop column ChangedSoldAsVacant;

-- Remove Duplicates


select * from(
select parcelid, saleprice, LegalReference, saledateconverted, splitpropertaddress, splitpropertycity,
row_number() over (partition by parcelid, saleprice, LegalReference, saledateconverted, splitpropertaddress, splitpropertycity 
order by parcelid) as row_num
from data) a
where row_num > 1;

create table data_cleaning(
parcelid text,
saleprice bigint,
legalreference text,
saledateconverted date,
splitpropertaddress varchar(1000),
splitpropertycity varchar(1000),
row_num int);


insert into data_cleaning(
select parcelid, saleprice, LegalReference, saledateconverted, splitpropertaddress, splitpropertycity,
row_number() over (partition by parcelid, saleprice, LegalReference, saledateconverted, splitpropertaddress, splitpropertycity 
order by parcelid) as row_num
from data);

select *
FROM data
join data_cleaning
	on data.ParcelID = data_cleaning.ParcelID
where data_cleaning.row_num > 1;

drop table data_cleaning;

-- Populate Property Address Data

select *
from data 
order by parcelid;

select a.ParcelID, a.SplitPropertAddress, b.parcelid, b.SplitPropertAddress, ifnull(a.Splitpropertaddress, b.splitpropertaddress)
from data a
join data b
	on a.parcelid = b.parcelid
    and a.uniqueid <> b.uniqueid
where a.SplitPropertAddress is null;
    
update data a
join data b
	on a.parcelid = b.parcelid
set a.splitpropertaddress = ifnull(a.splitpropertaddress, b.splitpropertaddress)
where a.splitpropertaddress is null;


-- Delete Unused Columns

alter table data
drop column TaxDistrict;
